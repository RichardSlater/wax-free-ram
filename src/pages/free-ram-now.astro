---
import Layout from "../layouts/Layout.astro";
---

<Layout title="WAX RAM Free">
  <main>
    <h1>WAX RAM <span class="text-gradient">Free</span></h1>
    <div class="instructions">
      <p>Recovering WAX RAM is a two step process:</p>
      <ol>
        <li>Login to your WAX Wallet using Anchor, Cloud Wallet or Wombat.</li>
        <li>Review the open offers, and click <code>Free My RAM</code>!</li>
      </ol>
      <p>
        <strong>Important:</strong> Clicking <code>Free My RAM</code> will cancel
        all pending offers from supported services (i.e. Warsaken) older than 1 hour,
        this action is irreversable.
      </p>
    </div>

    <div class="content">
      <button class="connect">Connect Wallet</button>
    </div>

    <div class="content nothingTodo hidden">
      <h1>No RAM for you</h1>
      <p>
        It looks like you have done everything possible to free your RAM, good
        job.
        <img
          src="https://media1.tenor.com/m/XQLVLptLIBEAAAAd/maes-b-lost-in-a-field.gif"
        />
      </p>
    </div>

    <div class="content freeRam hidden">
      <h2>I want to break <span class="text-gradient">free</span></h2>
      <p>Found some offers to remove:</p>
      <ul id="offers"></ul>
      <button class="freeRamButton">Free My RAM</button>
    </div>

    <script>
      import { SessionKit } from "@wharfkit/session";
      import { WebRenderer } from "@wharfkit/web-renderer";
      import { WalletPluginAnchor } from "@wharfkit/wallet-plugin-anchor";
      import { WalletPluginWombat } from "@wharfkit/wallet-plugin-wombat";
      import { WalletPluginCloudWallet } from "@wharfkit/wallet-plugin-cloudwallet";

      const baseUrl = "https://wax.eosusa.io";

      const webRenderer = new WebRenderer();

      const sessionKit = new SessionKit({
        appName: "WAX RAM Free",
        chains: [
          {
            id: "1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4",
            url: "https://wax.greymass.com",
          },
        ],
        ui: webRenderer,
        walletPlugins: [
          new WalletPluginAnchor(),
          new WalletPluginWombat(),
          new WalletPluginCloudWallet(),
        ],
      });

      const buttons = document.querySelectorAll("button.connect");

      buttons.forEach((button) => {
        button.addEventListener("click", async () => {
          const response = await sessionKit.login();
          const session = response.session;

          if (session) {
            buttons.forEach((b) => b.classList.add("hidden"));

            const cutoff = Math.floor(new Date().getTime()) - 3600;
            const account = await session.actor;
            const url = `${baseUrl}/atomicassets/v1/offers?recipient=warsaken&account=${account}&sender=${account}&state=0&before=${cutoff}`;
            const apiResponse = await fetch(url);
            const payload = await apiResponse.json();
            const data = payload.data as Array<any>;

            console.log(url);

            if (data.length == 0) {
              document
                .querySelectorAll("div.nothingTodo")
                .forEach((d) => d.classList.remove("hidden"));
            } else {
              document
                .querySelectorAll("div.freeRam")
                .forEach((d) => d.classList.remove("hidden"));

              const cancelOffers = data.map((o) => ({
                account: "atomicassets",
                name: "canceloffer",
                authorization: [session.permissionLevel],
                data: { offer_id: o.offer_id },
              }));

              const offersList = document.getElementById("offers");
              const offersListItems = data.map((o) => {
                const li = document.createElement("li");
                li.textContent = `${o.offer_id}: ${o.sender_name} â†’ ${o.recipient_name} (${o.memo})`;
                return li;
              });

              offersListItems.forEach((o) => offersList?.appendChild(o));

              document
                .querySelector(".freeRamButton")
                ?.addEventListener("click", async () => {
                  session.transact({ actions: cancelOffers });
                });
            }
          }
        });
      });
    </script>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
    text-transform: uppercase;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
    text-transform: uppercase;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  button {
    padding: 0.75em;
    font-size: large;
    font-weight: bold;
    background-image: var(--accent-gradient);
    background-size: 400%;
    background-position: 0%;
    color: var(--accent-light);
		border-radius: 7px;
		background-position: 0%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1), color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  button:is(:hover, :focus-within) {
		background-position: 20%;
    color: rgb(var(--accent-dark));
    box-shadow: 0px 0px 5px 5px rgb(var(--accent-dark));

	}
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .hidden {
    display: none;
  }
  .content {
    text-align: center;
  }

  img {
    padding: 1em;
  }
  #offers {
    list-style-type: none;
  }
</style>
